@using netmockery
@model IEnumerable<ResponseRegistryItem>
<table class="table">
    <thead>
        <tr>
            <th>Timestamp</th>
            <th>Request Path</th>
            <th>Endpoint</th>
            
            <th>Request Body</th>
            <th>Request Matcher</th>

            <th>Response Creator</th>
            <th>Response Body</th>
            <th>Error</th>
        </tr>
    </thead>
    <tbody>
        @{ 
            var i = 0;
        }
        @foreach (var item in Model)
        {
            <tr>
                <td>@item.Timestamp</td>
                <td>@item.RequestPath</td>
                <td>
                    @if (item.Endpoint != null)
                    {
                        <text>@item.Endpoint.Name</text>
                    }
                </td>
                <td>
                    <pre>@item.RequestBody.Substring(0, Math.Min(50, item.RequestBody.Length))...</pre>
                    <button class="btn" type="button" data-clipboard-target="#rq@(i)"><span class="glyphicon glyphicon-copy" aria-hidden="true"></span></button>
                    <textarea class="hiddentextarea" id="rq@(i)">@item.RequestBody</textarea>
                </td>
                <td>
                    @if (item.RequestMatcher != null)
                    {
                        @await Component.InvokeAsync("RequestMatcher", new { requestMatcher = item.RequestMatcher })
                    }
                    
                </td>
                <td>
                    @if (item.ResponseCreator != null)
                    {
                        @await Component.InvokeAsync("ResponseCreator", new { responseCreator = item.ResponseCreator, endpoint = item.Endpoint })
                    }
                </td>
                <td>
                    @if (item.ResponseBody != null)
                    {
                        <pre>@item.ResponseBody.Substring(0, 50)...</pre>
                        <a href="@Url.Action("DownloadResponse", new { requestId = item.Id })"><span class="glyphicon glyphicon-download"></span></a>
                    }
                </td>
                <td>
                    @if (item.Error != null)
                    {
                        @item.Error
                    }
                </td>
            </tr>
            i++;
        }
    </tbody>
</table>

